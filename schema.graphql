type Token @entity {
  id: ID!
  collection: String!
  tokenID: BigInt!
  tokenURI: String!
  ipfsURI: String!
  image: String!
  name: String!
  description: String!
  character: String
  face: String
  hairType: String
  mask: String
  ear: String
  eyeCover: String
  apparel: String
  headwear: String
  tattoo: String
  weapon: String
  effect: String
  background: String
  updatedAtTimestamp: BigInt!
  owner: User!
}

type User @entity {
  id: ID!
  tokens: [Token!]! @derivedFrom(field: "owner")
}

type _Schema_
  @fulltext(
    name: "vividSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "Token"
        fields: [
          { name: "name" }
          { name: "description" }
          { name: "character" }
          { name: "face" }
          { name: "hairType" }
          { name: "mask" }
          { name: "ear" }
          { name: "eyeCover" }
          { name: "apparel" }
          { name: "headwear" }
          { name: "tattoo" }
          { name: "weapon" }
          { name: "effect" }
          { name: "background" }
        ]
      }
    ]
  )

type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ConsecutiveTransfer @entity(immutable: true) {
  id: Bytes!
  fromTokenId: BigInt! # uint256
  toTokenId: BigInt! # uint256
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Invited @entity(immutable: true) {
  id: Bytes!
  key: Bytes! # bytes32
  cid: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Referral @entity(immutable: true) {
  id: Bytes!
  affiliate: Bytes! # address
  wad: BigInt! # uint128
  numMints: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawal @entity(immutable: true) {
  id: Bytes!
  src: Bytes! # address
  wad: BigInt! # uint128
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
